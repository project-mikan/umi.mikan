syntax = "proto3";
option go_package = "github.com/project-mikan/umi.mikan/backend/infrastructure/grpc";

package diary;

service DiaryService {
  rpc CreateDiaryEntry(CreateDiaryEntryRequest)
      returns (CreateDiaryEntryResponse);
  rpc GetDiaryEntry(GetDiaryEntryRequest) returns (GetDiaryEntryResponse);
  rpc ListDiaryEntries(ListDiaryEntriesRequest)
      returns (ListDiaryEntriesResponse);
  rpc SearchDiaryEntries(SearchDiaryEntriesRequest)
      returns (SearchDiaryEntriesResponse);
  rpc UpdateDiaryEntry(UpdateDiaryEntryRequest)
      returns (UpdateDiaryEntryResponse);
  rpc DeleteDiaryEntry(DeleteDiaryEntryRequest)
      returns (DeleteDiaryEntryResponse);
}

message Date {
  uint32 year = 1;
  uint32 month = 2;
  uint32 day = 3;
}
// 日記エントリのメッセージ
message DiaryEntry {
  string id = 1;      // 日記ID
  string content = 2; // 内容
  Date date = 3;      // 日付
}

// 新しい日記エントリを作成するためのリクエスト
message CreateDiaryEntryRequest {
  string title = 1;
  string content = 2;
}

// 日記エントリを作成した結果を返すレスポンス
message CreateDiaryEntryResponse { DiaryEntry entry = 1; }

// 特定の日記エントリを取得するためのリクエスト
message GetDiaryEntryRequest { string id = 1; }

message SearchDiaryEntriesRequest {
  string userID = 1;
  string keyword = 2;
}
message SearchDiaryEntriesResponse { repeated DiaryEntry entries = 1; }

// 日記エントリを取得した結果を返すレスポンス
message GetDiaryEntryResponse { DiaryEntry entry = 1; }

// すべての日記エントリをリストするためのリクエスト
message ListDiaryEntriesRequest {}

// 複数の日記エントリを返すレスポンス
message ListDiaryEntriesResponse { repeated DiaryEntry entries = 1; }

// 日記エントリを更新するためのリクエスト
message UpdateDiaryEntryRequest {
  string id = 1;
  string title = 2;
  string content = 3;
}

// 更新された日記エントリを返すレスポンス
message UpdateDiaryEntryResponse { DiaryEntry entry = 1; }

// 日記エントリを削除するためのリクエスト
message DeleteDiaryEntryRequest { string id = 1; }

// 削除操作の結果を返すレスポンス
message DeleteDiaryEntryResponse { bool success = 1; }
