// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v6.32.0
// source: proto/diary/diary.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type YMD struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          uint32                 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month         uint32                 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day           uint32                 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YMD) Reset() {
	*x = YMD{}
	mi := &file_proto_diary_diary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YMD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YMD) ProtoMessage() {}

func (x *YMD) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YMD.ProtoReflect.Descriptor instead.
func (*YMD) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{0}
}

func (x *YMD) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *YMD) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *YMD) GetDay() uint32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type YM struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          uint32                 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month         uint32                 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YM) Reset() {
	*x = YM{}
	mi := &file_proto_diary_diary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YM) ProtoMessage() {}

func (x *YM) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YM.ProtoReflect.Descriptor instead.
func (*YM) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{1}
}

func (x *YM) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *YM) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

// 日記エントリのメッセージ
type DiaryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 日記ID
	Date          *YMD                   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`                             // 日付
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                       // 内容
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 作成日時（Unix timestamp）
	UpdatedAt     int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新日時（Unix timestamp）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiaryEntry) Reset() {
	*x = DiaryEntry{}
	mi := &file_proto_diary_diary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiaryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryEntry) ProtoMessage() {}

func (x *DiaryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryEntry.ProtoReflect.Descriptor instead.
func (*DiaryEntry) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{2}
}

func (x *DiaryEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiaryEntry) GetDate() *YMD {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *DiaryEntry) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DiaryEntry) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DiaryEntry) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 新しい日記エントリを作成するためのリクエスト
type CreateDiaryEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Date          *YMD                   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDiaryEntryRequest) Reset() {
	*x = CreateDiaryEntryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiaryEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiaryEntryRequest) ProtoMessage() {}

func (x *CreateDiaryEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiaryEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateDiaryEntryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDiaryEntryRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateDiaryEntryRequest) GetDate() *YMD {
	if x != nil {
		return x.Date
	}
	return nil
}

// 日記エントリを作成した結果を返すレスポンス
type CreateDiaryEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         *DiaryEntry            `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDiaryEntryResponse) Reset() {
	*x = CreateDiaryEntryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiaryEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiaryEntryResponse) ProtoMessage() {}

func (x *CreateDiaryEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiaryEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateDiaryEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDiaryEntryResponse) GetEntry() *DiaryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// 特定の日記エントリを取得するためのリクエスト
type GetDiaryEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *YMD                   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // 日付を指定して取得
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiaryEntryRequest) Reset() {
	*x = GetDiaryEntryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiaryEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryEntryRequest) ProtoMessage() {}

func (x *GetDiaryEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryEntryRequest.ProtoReflect.Descriptor instead.
func (*GetDiaryEntryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{5}
}

func (x *GetDiaryEntryRequest) GetDate() *YMD {
	if x != nil {
		return x.Date
	}
	return nil
}

// 複数日記エントリを取得するためのリクエスト (e.g., by range or count)
type GetDiaryEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dates         []*YMD                 `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty"` // 取得したい日付の配列
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiaryEntriesRequest) Reset() {
	*x = GetDiaryEntriesRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiaryEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryEntriesRequest) ProtoMessage() {}

func (x *GetDiaryEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetDiaryEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{6}
}

func (x *GetDiaryEntriesRequest) GetDates() []*YMD {
	if x != nil {
		return x.Dates
	}
	return nil
}

// 月ごとに日記エントリを取得するためのリクエスト
type GetDiaryEntriesByMonthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         *YM                    `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"` // 年月を指定
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiaryEntriesByMonthRequest) Reset() {
	*x = GetDiaryEntriesByMonthRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiaryEntriesByMonthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryEntriesByMonthRequest) ProtoMessage() {}

func (x *GetDiaryEntriesByMonthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryEntriesByMonthRequest.ProtoReflect.Descriptor instead.
func (*GetDiaryEntriesByMonthRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{7}
}

func (x *GetDiaryEntriesByMonthRequest) GetMonth() *YM {
	if x != nil {
		return x.Month
	}
	return nil
}

type SearchDiaryEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchDiaryEntriesRequest) Reset() {
	*x = SearchDiaryEntriesRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDiaryEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDiaryEntriesRequest) ProtoMessage() {}

func (x *SearchDiaryEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDiaryEntriesRequest.ProtoReflect.Descriptor instead.
func (*SearchDiaryEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{8}
}

func (x *SearchDiaryEntriesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchDiaryEntriesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SearchedKeyword string                 `protobuf:"bytes,1,opt,name=searched_keyword,json=searchedKeyword,proto3" json:"searched_keyword,omitempty"` // 実際に検索した単語
	Entries         []*DiaryEntry          `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SearchDiaryEntriesResponse) Reset() {
	*x = SearchDiaryEntriesResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDiaryEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDiaryEntriesResponse) ProtoMessage() {}

func (x *SearchDiaryEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDiaryEntriesResponse.ProtoReflect.Descriptor instead.
func (*SearchDiaryEntriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{9}
}

func (x *SearchDiaryEntriesResponse) GetSearchedKeyword() string {
	if x != nil {
		return x.SearchedKeyword
	}
	return ""
}

func (x *SearchDiaryEntriesResponse) GetEntries() []*DiaryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetDiaryEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*DiaryEntry          `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiaryEntriesResponse) Reset() {
	*x = GetDiaryEntriesResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiaryEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryEntriesResponse) ProtoMessage() {}

func (x *GetDiaryEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetDiaryEntriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{10}
}

func (x *GetDiaryEntriesResponse) GetEntries() []*DiaryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetDiaryEntriesByMonthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*DiaryEntry          `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiaryEntriesByMonthResponse) Reset() {
	*x = GetDiaryEntriesByMonthResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiaryEntriesByMonthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryEntriesByMonthResponse) ProtoMessage() {}

func (x *GetDiaryEntriesByMonthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryEntriesByMonthResponse.ProtoReflect.Descriptor instead.
func (*GetDiaryEntriesByMonthResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{11}
}

func (x *GetDiaryEntriesByMonthResponse) GetEntries() []*DiaryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// 日記エントリを取得した結果を返すレスポンス
type GetDiaryEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         *DiaryEntry            `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiaryEntryResponse) Reset() {
	*x = GetDiaryEntryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiaryEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryEntryResponse) ProtoMessage() {}

func (x *GetDiaryEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryEntryResponse.ProtoReflect.Descriptor instead.
func (*GetDiaryEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{12}
}

func (x *GetDiaryEntryResponse) GetEntry() *DiaryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// 日記エントリを更新するためのリクエスト
type UpdateDiaryEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Date          *YMD                   `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDiaryEntryRequest) Reset() {
	*x = UpdateDiaryEntryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDiaryEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiaryEntryRequest) ProtoMessage() {}

func (x *UpdateDiaryEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiaryEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateDiaryEntryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateDiaryEntryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDiaryEntryRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDiaryEntryRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateDiaryEntryRequest) GetDate() *YMD {
	if x != nil {
		return x.Date
	}
	return nil
}

// 更新された日記エントリを返すレスポンス
type UpdateDiaryEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         *DiaryEntry            `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDiaryEntryResponse) Reset() {
	*x = UpdateDiaryEntryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDiaryEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiaryEntryResponse) ProtoMessage() {}

func (x *UpdateDiaryEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiaryEntryResponse.ProtoReflect.Descriptor instead.
func (*UpdateDiaryEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateDiaryEntryResponse) GetEntry() *DiaryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// 日記エントリを削除するためのリクエスト
type DeleteDiaryEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDiaryEntryRequest) Reset() {
	*x = DeleteDiaryEntryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiaryEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiaryEntryRequest) ProtoMessage() {}

func (x *DeleteDiaryEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiaryEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiaryEntryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteDiaryEntryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 削除操作の結果を返すレスポンス
type DeleteDiaryEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDiaryEntryResponse) Reset() {
	*x = DeleteDiaryEntryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiaryEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiaryEntryResponse) ProtoMessage() {}

func (x *DeleteDiaryEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiaryEntryResponse.ProtoReflect.Descriptor instead.
func (*DeleteDiaryEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteDiaryEntryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 月サマリー
type MonthlySummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Month         *YM                    `protobuf:"bytes,2,opt,name=month,proto3" json:"month,omitempty"`
	Summary       string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonthlySummary) Reset() {
	*x = MonthlySummary{}
	mi := &file_proto_diary_diary_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlySummary) ProtoMessage() {}

func (x *MonthlySummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlySummary.ProtoReflect.Descriptor instead.
func (*MonthlySummary) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{17}
}

func (x *MonthlySummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MonthlySummary) GetMonth() *YM {
	if x != nil {
		return x.Month
	}
	return nil
}

func (x *MonthlySummary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *MonthlySummary) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MonthlySummary) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 月ごとのサマリー生成リクエスト
type GenerateMonthlySummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         *YM                    `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateMonthlySummaryRequest) Reset() {
	*x = GenerateMonthlySummaryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateMonthlySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMonthlySummaryRequest) ProtoMessage() {}

func (x *GenerateMonthlySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMonthlySummaryRequest.ProtoReflect.Descriptor instead.
func (*GenerateMonthlySummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateMonthlySummaryRequest) GetMonth() *YM {
	if x != nil {
		return x.Month
	}
	return nil
}

// 月ごとのサマリー生成レスポンス
type GenerateMonthlySummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       *MonthlySummary        `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateMonthlySummaryResponse) Reset() {
	*x = GenerateMonthlySummaryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateMonthlySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMonthlySummaryResponse) ProtoMessage() {}

func (x *GenerateMonthlySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMonthlySummaryResponse.ProtoReflect.Descriptor instead.
func (*GenerateMonthlySummaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateMonthlySummaryResponse) GetSummary() *MonthlySummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// 月ごとのサマリー取得リクエスト
type GetMonthlySummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         *YM                    `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMonthlySummaryRequest) Reset() {
	*x = GetMonthlySummaryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthlySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySummaryRequest) ProtoMessage() {}

func (x *GetMonthlySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySummaryRequest.ProtoReflect.Descriptor instead.
func (*GetMonthlySummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{20}
}

func (x *GetMonthlySummaryRequest) GetMonth() *YM {
	if x != nil {
		return x.Month
	}
	return nil
}

// 月ごとのサマリー取得レスポンス
type GetMonthlySummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       *MonthlySummary        `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMonthlySummaryResponse) Reset() {
	*x = GetMonthlySummaryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthlySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySummaryResponse) ProtoMessage() {}

func (x *GetMonthlySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySummaryResponse.ProtoReflect.Descriptor instead.
func (*GetMonthlySummaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{21}
}

func (x *GetMonthlySummaryResponse) GetSummary() *MonthlySummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// 日サマリー
type DailySummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DiaryId       string                 `protobuf:"bytes,2,opt,name=diary_id,json=diaryId,proto3" json:"diary_id,omitempty"`
	Date          *YMD                   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Summary       string                 `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailySummary) Reset() {
	*x = DailySummary{}
	mi := &file_proto_diary_diary_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailySummary) ProtoMessage() {}

func (x *DailySummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailySummary.ProtoReflect.Descriptor instead.
func (*DailySummary) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{22}
}

func (x *DailySummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DailySummary) GetDiaryId() string {
	if x != nil {
		return x.DiaryId
	}
	return ""
}

func (x *DailySummary) GetDate() *YMD {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *DailySummary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *DailySummary) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DailySummary) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 日ごとのサマリー生成リクエスト
type GenerateDailySummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiaryId       string                 `protobuf:"bytes,1,opt,name=diary_id,json=diaryId,proto3" json:"diary_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateDailySummaryRequest) Reset() {
	*x = GenerateDailySummaryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDailySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDailySummaryRequest) ProtoMessage() {}

func (x *GenerateDailySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDailySummaryRequest.ProtoReflect.Descriptor instead.
func (*GenerateDailySummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{23}
}

func (x *GenerateDailySummaryRequest) GetDiaryId() string {
	if x != nil {
		return x.DiaryId
	}
	return ""
}

// 日ごとのサマリー生成レスポンス
type GenerateDailySummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       *DailySummary          `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateDailySummaryResponse) Reset() {
	*x = GenerateDailySummaryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDailySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDailySummaryResponse) ProtoMessage() {}

func (x *GenerateDailySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDailySummaryResponse.ProtoReflect.Descriptor instead.
func (*GenerateDailySummaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{24}
}

func (x *GenerateDailySummaryResponse) GetSummary() *DailySummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// 日ごとのサマリー取得リクエスト
type GetDailySummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *YMD                   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDailySummaryRequest) Reset() {
	*x = GetDailySummaryRequest{}
	mi := &file_proto_diary_diary_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailySummaryRequest) ProtoMessage() {}

func (x *GetDailySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailySummaryRequest.ProtoReflect.Descriptor instead.
func (*GetDailySummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{25}
}

func (x *GetDailySummaryRequest) GetDate() *YMD {
	if x != nil {
		return x.Date
	}
	return nil
}

// 日ごとのサマリー取得レスポンス
type GetDailySummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       *DailySummary          `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDailySummaryResponse) Reset() {
	*x = GetDailySummaryResponse{}
	mi := &file_proto_diary_diary_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailySummaryResponse) ProtoMessage() {}

func (x *GetDailySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diary_diary_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailySummaryResponse.ProtoReflect.Descriptor instead.
func (*GetDailySummaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_diary_diary_proto_rawDescGZIP(), []int{26}
}

func (x *GetDailySummaryResponse) GetSummary() *DailySummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

var File_proto_diary_diary_proto protoreflect.FileDescriptor

var file_proto_diary_diary_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2f, 0x64, 0x69,
	0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64, 0x69, 0x61, 0x72, 0x79,
	0x22, 0x41, 0x0a, 0x03, 0x59, 0x4d, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x64, 0x61, 0x79, 0x22, 0x2e, 0x0a, 0x02, 0x59, 0x4d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x22, 0x94, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d, 0x44, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x53, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d, 0x44, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x43, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x61,
	0x72, 0x79, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x36, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x69, 0x61,
	0x72, 0x79, 0x2e, 0x59, 0x4d, 0x44, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d,
	0x44, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x59, 0x4d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x35, 0x0a, 0x19, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x74, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x61, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69,
	0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x61, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x4d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x40,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x79, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x59, 0x4d, 0x44, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d, 0x52, 0x05,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a,
	0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22,
	0x51, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22,
	0x4c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xb1, 0x01,
	0x0a, 0x0c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e,
	0x59, 0x4d, 0x44, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x38, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1c, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x38, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x59, 0x4d, 0x44, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x32, 0xdf,
	0x07, 0x0a, 0x0c, 0x44, 0x69, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x53, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1b, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x24, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x64, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x69,
	0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x61, 0x72, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65,
	0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c,
	0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x61,
	0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x69,
	0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x1d, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x6d, 0x69, 0x6b, 0x61, 0x6e, 0x2f, 0x75, 0x6d, 0x69,
	0x2e, 0x6d, 0x69, 0x6b, 0x61, 0x6e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_diary_diary_proto_rawDescOnce sync.Once
	file_proto_diary_diary_proto_rawDescData = file_proto_diary_diary_proto_rawDesc
)

func file_proto_diary_diary_proto_rawDescGZIP() []byte {
	file_proto_diary_diary_proto_rawDescOnce.Do(func() {
		file_proto_diary_diary_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_diary_diary_proto_rawDescData)
	})
	return file_proto_diary_diary_proto_rawDescData
}

var file_proto_diary_diary_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_diary_diary_proto_goTypes = []any{
	(*YMD)(nil),                            // 0: diary.YMD
	(*YM)(nil),                             // 1: diary.YM
	(*DiaryEntry)(nil),                     // 2: diary.DiaryEntry
	(*CreateDiaryEntryRequest)(nil),        // 3: diary.CreateDiaryEntryRequest
	(*CreateDiaryEntryResponse)(nil),       // 4: diary.CreateDiaryEntryResponse
	(*GetDiaryEntryRequest)(nil),           // 5: diary.GetDiaryEntryRequest
	(*GetDiaryEntriesRequest)(nil),         // 6: diary.GetDiaryEntriesRequest
	(*GetDiaryEntriesByMonthRequest)(nil),  // 7: diary.GetDiaryEntriesByMonthRequest
	(*SearchDiaryEntriesRequest)(nil),      // 8: diary.SearchDiaryEntriesRequest
	(*SearchDiaryEntriesResponse)(nil),     // 9: diary.SearchDiaryEntriesResponse
	(*GetDiaryEntriesResponse)(nil),        // 10: diary.GetDiaryEntriesResponse
	(*GetDiaryEntriesByMonthResponse)(nil), // 11: diary.GetDiaryEntriesByMonthResponse
	(*GetDiaryEntryResponse)(nil),          // 12: diary.GetDiaryEntryResponse
	(*UpdateDiaryEntryRequest)(nil),        // 13: diary.UpdateDiaryEntryRequest
	(*UpdateDiaryEntryResponse)(nil),       // 14: diary.UpdateDiaryEntryResponse
	(*DeleteDiaryEntryRequest)(nil),        // 15: diary.DeleteDiaryEntryRequest
	(*DeleteDiaryEntryResponse)(nil),       // 16: diary.DeleteDiaryEntryResponse
	(*MonthlySummary)(nil),                 // 17: diary.MonthlySummary
	(*GenerateMonthlySummaryRequest)(nil),  // 18: diary.GenerateMonthlySummaryRequest
	(*GenerateMonthlySummaryResponse)(nil), // 19: diary.GenerateMonthlySummaryResponse
	(*GetMonthlySummaryRequest)(nil),       // 20: diary.GetMonthlySummaryRequest
	(*GetMonthlySummaryResponse)(nil),      // 21: diary.GetMonthlySummaryResponse
	(*DailySummary)(nil),                   // 22: diary.DailySummary
	(*GenerateDailySummaryRequest)(nil),    // 23: diary.GenerateDailySummaryRequest
	(*GenerateDailySummaryResponse)(nil),   // 24: diary.GenerateDailySummaryResponse
	(*GetDailySummaryRequest)(nil),         // 25: diary.GetDailySummaryRequest
	(*GetDailySummaryResponse)(nil),        // 26: diary.GetDailySummaryResponse
}
var file_proto_diary_diary_proto_depIdxs = []int32{
	0,  // 0: diary.DiaryEntry.date:type_name -> diary.YMD
	0,  // 1: diary.CreateDiaryEntryRequest.date:type_name -> diary.YMD
	2,  // 2: diary.CreateDiaryEntryResponse.entry:type_name -> diary.DiaryEntry
	0,  // 3: diary.GetDiaryEntryRequest.date:type_name -> diary.YMD
	0,  // 4: diary.GetDiaryEntriesRequest.dates:type_name -> diary.YMD
	1,  // 5: diary.GetDiaryEntriesByMonthRequest.month:type_name -> diary.YM
	2,  // 6: diary.SearchDiaryEntriesResponse.entries:type_name -> diary.DiaryEntry
	2,  // 7: diary.GetDiaryEntriesResponse.entries:type_name -> diary.DiaryEntry
	2,  // 8: diary.GetDiaryEntriesByMonthResponse.entries:type_name -> diary.DiaryEntry
	2,  // 9: diary.GetDiaryEntryResponse.entry:type_name -> diary.DiaryEntry
	0,  // 10: diary.UpdateDiaryEntryRequest.date:type_name -> diary.YMD
	2,  // 11: diary.UpdateDiaryEntryResponse.entry:type_name -> diary.DiaryEntry
	1,  // 12: diary.MonthlySummary.month:type_name -> diary.YM
	1,  // 13: diary.GenerateMonthlySummaryRequest.month:type_name -> diary.YM
	17, // 14: diary.GenerateMonthlySummaryResponse.summary:type_name -> diary.MonthlySummary
	1,  // 15: diary.GetMonthlySummaryRequest.month:type_name -> diary.YM
	17, // 16: diary.GetMonthlySummaryResponse.summary:type_name -> diary.MonthlySummary
	0,  // 17: diary.DailySummary.date:type_name -> diary.YMD
	22, // 18: diary.GenerateDailySummaryResponse.summary:type_name -> diary.DailySummary
	0,  // 19: diary.GetDailySummaryRequest.date:type_name -> diary.YMD
	22, // 20: diary.GetDailySummaryResponse.summary:type_name -> diary.DailySummary
	3,  // 21: diary.DiaryService.CreateDiaryEntry:input_type -> diary.CreateDiaryEntryRequest
	13, // 22: diary.DiaryService.UpdateDiaryEntry:input_type -> diary.UpdateDiaryEntryRequest
	15, // 23: diary.DiaryService.DeleteDiaryEntry:input_type -> diary.DeleteDiaryEntryRequest
	5,  // 24: diary.DiaryService.GetDiaryEntry:input_type -> diary.GetDiaryEntryRequest
	6,  // 25: diary.DiaryService.GetDiaryEntries:input_type -> diary.GetDiaryEntriesRequest
	7,  // 26: diary.DiaryService.GetDiaryEntriesByMonth:input_type -> diary.GetDiaryEntriesByMonthRequest
	8,  // 27: diary.DiaryService.SearchDiaryEntries:input_type -> diary.SearchDiaryEntriesRequest
	18, // 28: diary.DiaryService.GenerateMonthlySummary:input_type -> diary.GenerateMonthlySummaryRequest
	20, // 29: diary.DiaryService.GetMonthlySummary:input_type -> diary.GetMonthlySummaryRequest
	23, // 30: diary.DiaryService.GenerateDailySummary:input_type -> diary.GenerateDailySummaryRequest
	25, // 31: diary.DiaryService.GetDailySummary:input_type -> diary.GetDailySummaryRequest
	4,  // 32: diary.DiaryService.CreateDiaryEntry:output_type -> diary.CreateDiaryEntryResponse
	14, // 33: diary.DiaryService.UpdateDiaryEntry:output_type -> diary.UpdateDiaryEntryResponse
	16, // 34: diary.DiaryService.DeleteDiaryEntry:output_type -> diary.DeleteDiaryEntryResponse
	12, // 35: diary.DiaryService.GetDiaryEntry:output_type -> diary.GetDiaryEntryResponse
	10, // 36: diary.DiaryService.GetDiaryEntries:output_type -> diary.GetDiaryEntriesResponse
	11, // 37: diary.DiaryService.GetDiaryEntriesByMonth:output_type -> diary.GetDiaryEntriesByMonthResponse
	9,  // 38: diary.DiaryService.SearchDiaryEntries:output_type -> diary.SearchDiaryEntriesResponse
	19, // 39: diary.DiaryService.GenerateMonthlySummary:output_type -> diary.GenerateMonthlySummaryResponse
	21, // 40: diary.DiaryService.GetMonthlySummary:output_type -> diary.GetMonthlySummaryResponse
	24, // 41: diary.DiaryService.GenerateDailySummary:output_type -> diary.GenerateDailySummaryResponse
	26, // 42: diary.DiaryService.GetDailySummary:output_type -> diary.GetDailySummaryResponse
	32, // [32:43] is the sub-list for method output_type
	21, // [21:32] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_diary_diary_proto_init() }
func file_proto_diary_diary_proto_init() {
	if File_proto_diary_diary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_diary_diary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_diary_diary_proto_goTypes,
		DependencyIndexes: file_proto_diary_diary_proto_depIdxs,
		MessageInfos:      file_proto_diary_diary_proto_msgTypes,
	}.Build()
	File_proto_diary_diary_proto = out.File
	file_proto_diary_diary_proto_rawDesc = nil
	file_proto_diary_diary_proto_goTypes = nil
	file_proto_diary_diary_proto_depIdxs = nil
}
