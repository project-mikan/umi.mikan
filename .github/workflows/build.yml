name: Build All Docker Images

on:
  pull_request:
    branches:
      - main
    types: [closed]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/**'
      - 'infra/prod/**'

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # arm64„Å®amd64‰∏°ÂØæÂøú„ÅÆ„Åü„ÇÅ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Backend Build
      - name: Cache Docker layers (Backend)
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-backend
          key: ${{ runner.os }}-buildx-backend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-

      - name: Build and Push Backend to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infra/prod/backend/Dockerfile
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/umi-mikan-backend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/umi-mikan-backend:latest
          labels: latest
          cache-from: type=local,src=/tmp/.buildx-cache-backend
          cache-to: type=local,dest=/tmp/.buildx-cache-backend-new,mode=max

      - name: Move Backend cache
        run: |
          rm -rf /tmp/.buildx-cache-backend
          mv /tmp/.buildx-cache-backend-new /tmp/.buildx-cache-backend

      # Frontend Build
      - name: Cache Docker layers (Frontend)
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-frontend
          key: ${{ runner.os }}-buildx-frontend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-frontend-

      - name: Build and Push Frontend to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./infra/prod/frontend/Dockerfile
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/umi-mikan-frontend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/umi-mikan-frontend:latest
          labels: latest
          cache-from: type=local,src=/tmp/.buildx-cache-frontend
          cache-to: type=local,dest=/tmp/.buildx-cache-frontend-new,mode=max

      - name: Move Frontend cache
        run: |
          rm -rf /tmp/.buildx-cache-frontend
          mv /tmp/.buildx-cache-frontend-new /tmp/.buildx-cache-frontend

      # Scheduler Build
      - name: Cache Docker layers (Scheduler)
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-scheduler
          key: ${{ runner.os }}-buildx-scheduler-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-scheduler-

      - name: Build and Push Scheduler to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infra/prod/scheduler/Dockerfile
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/umi-mikan-scheduler:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/umi-mikan-scheduler:latest
          labels: latest
          cache-from: type=local,src=/tmp/.buildx-cache-scheduler
          cache-to: type=local,dest=/tmp/.buildx-cache-scheduler-new,mode=max

      - name: Move Scheduler cache
        run: |
          rm -rf /tmp/.buildx-cache-scheduler
          mv /tmp/.buildx-cache-scheduler-new /tmp/.buildx-cache-scheduler

      # Subscriber Build
      - name: Cache Docker layers (Subscriber)
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-subscriber
          key: ${{ runner.os }}-buildx-subscriber-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-subscriber-

      - name: Build and Push Subscriber to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infra/prod/subscriber/Dockerfile
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/umi-mikan-subscriber:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/umi-mikan-subscriber:latest
          labels: latest
          cache-from: type=local,src=/tmp/.buildx-cache-subscriber
          cache-to: type=local,dest=/tmp/.buildx-cache-subscriber-new,mode=max

      - name: Move Subscriber cache
        run: |
          rm -rf /tmp/.buildx-cache-subscriber
          mv /tmp/.buildx-cache-subscriber-new /tmp/.buildx-cache-subscriber

      # Discord Notification
      - name: Send Discord notification
        if: always()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.NOTIFY_DISCORD_WEBHOOK }}
          title: "üê≥ Docker Build Notification"
          description: |
            **PR**: ${{ github.event.pull_request.title }}
            **Author**: ${{ github.event.pull_request.user.login }}
            **Status**: ${{ job.status == 'success' && '‚úÖ All Docker images built successfully!' || '‚ùå Docker build failed' }}

            **Images Built**:
            - Backend: ghcr.io/${{ github.repository_owner }}/umi-mikan-backend:${{ github.sha }}
            - Frontend: ghcr.io/${{ github.repository_owner }}/umi-mikan-frontend:${{ github.sha }}
            - Scheduler: ghcr.io/${{ github.repository_owner }}/umi-mikan-scheduler:${{ github.sha }}
            - Subscriber: ghcr.io/${{ github.repository_owner }}/umi-mikan-subscriber:${{ github.sha }}
          color: ${{ job.status == 'success' && '3066993' || '15158332' }}
          url: ${{ github.event.pull_request.html_url }}
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"