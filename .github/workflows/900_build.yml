name: 【deploy】build

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  PLATFORMS: linux/amd64  # 本番環境に合わせてプラットフォームを単一に

jobs:
  # 変更されたサービスを検出
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Detect changes
        id: changes
        run: |
          echo "backend=$(git diff --name-only HEAD~1 HEAD | grep -E '^(backend/|infra/prod/(backend|scheduler|subscriber)/)' | wc -l | awk '{print ($1 > 0)}')" >> $GITHUB_OUTPUT
          echo "frontend=$(git diff --name-only HEAD~1 HEAD | grep -E '^(frontend/|infra/prod/frontend/)' | wc -l | awk '{print ($1 > 0)}')" >> $GITHUB_OUTPUT

  # Backend系サービスを並列build（共通の依存関係を利用）
  build-backend-services:
    name: Build Backend Services
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    strategy:
      matrix:
        service: [backend, scheduler, subscriber]
      max-parallel: 3
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Build and Push ${{ matrix.service }}
        uses: ./.github/actions/docker-build
        with:
          service: ${{ matrix.service }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          platforms: ${{ env.PLATFORMS }}

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Build and Push Frontend
        uses: ./.github/actions/docker-build
        with:
          service: frontend
          github-token: ${{ secrets.GITHUB_TOKEN }}
          platforms: ${{ env.PLATFORMS }}

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [detect-changes, build-backend-services, build-frontend]
    if: always()
    steps:
      - name: Send Discord notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.NOTIFY_DISCORD_WEBHOOK }}
          title: "🐳 Docker Build Notification"
          description: |
            **Branch**: ${{ github.ref_name }}
            **Author**: ${{ github.actor }}
            **Backend Changed**: ${{ needs.detect-changes.outputs.backend }}
            **Frontend Changed**: ${{ needs.detect-changes.outputs.frontend }}
            **Backend Status**: ${{ needs.build-backend-services.result || 'skipped' }}
            **Frontend Status**: ${{ needs.build-frontend.result || 'skipped' }}
            **Overall Status**: ${{ (needs.build-backend-services.result == 'success' || needs.build-backend-services.result == 'skipped') && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped') && '✅ Build completed successfully!' || '❌ Build failed' }}
          color: ${{ (needs.build-backend-services.result == 'success' || needs.build-backend-services.result == 'skipped') && (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped') && '3066993' || '15158332' }}
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
