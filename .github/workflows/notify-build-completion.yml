name: Notify Build Completion

on:
  workflow_run:
    workflows:
      - "Build Backend Docker Image"
      - "Build Frontend Docker Image"
      - "Build Scheduler Docker Image"
      - "Build Subscriber Docker Image"
    types:
      - completed

jobs:
  check-all-builds:
    name: Check if all builds are complete
    runs-on: ubuntu-latest
    outputs:
      all-complete: ${{ steps.check.outputs.all-complete }}
      all-success: ${{ steps.check.outputs.all-success }}

    steps:
      - name: Check all workflow statuses
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const workflowNames = [
              'Build Backend Docker Image',
              'Build Frontend Docker Image',
              'Build Scheduler Docker Image',
              'Build Subscriber Docker Image'
            ];

            const { data: workflows } = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event: 'pull_request',
              status: 'completed',
              per_page: 100
            });

            const latestRuns = {};
            const targetSha = '${{ github.event.workflow_run.head_sha }}';

            // Find the latest run for each workflow with matching SHA
            for (const run of workflows.workflow_runs) {
              if (run.head_sha === targetSha && workflowNames.includes(run.name)) {
                if (!latestRuns[run.name] || new Date(run.created_at) > new Date(latestRuns[run.name].created_at)) {
                  latestRuns[run.name] = run;
                }
              }
            }

            const foundWorkflows = Object.keys(latestRuns);
            const allComplete = foundWorkflows.length === workflowNames.length;
            const allSuccess = Object.values(latestRuns).every(run => run.conclusion === 'success');

            console.log('Found workflows:', foundWorkflows);
            console.log('All complete:', allComplete);
            console.log('All success:', allSuccess);

            core.setOutput('all-complete', allComplete);
            core.setOutput('all-success', allSuccess);

  notify:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: check-all-builds
    if: needs.check-all-builds.outputs.all-complete == 'true'

    steps:

      - name: Get workflow run details
        id: workflow-details
        uses: actions/github-script@v7
        with:
          script: |
            const { data: run } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: '${{ github.event.workflow_run.id }}'
            });

            // Get PR details from the workflow run
            const prNumber = run.pull_requests[0]?.number;
            let prDetails = null;
            if (prNumber) {
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              prDetails = pr;
            }

            core.setOutput('pr-title', prDetails?.title || 'Unknown PR');
            core.setOutput('pr-author', prDetails?.user?.login || 'Unknown');
            core.setOutput('pr-url', prDetails?.html_url || '');
            core.setOutput('sha', run.head_sha);

      - name: Send Discord notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.NOTIFY_DISCORD_WEBHOOK }}
          title: "üê≥ Docker Build Notification"
          description: |
            **PR**: ${{ steps.workflow-details.outputs.pr-title }}
            **Author**: ${{ steps.workflow-details.outputs.pr-author }}
            **Status**: ${{ needs.check-all-builds.outputs.all-success == 'true' && '‚úÖ All Docker images built successfully!' || '‚ùå Some Docker builds failed' }}

            **Images Built**:
            - Backend: ghcr.io/${{ github.repository_owner }}/umi-mikan-backend:${{ steps.workflow-details.outputs.sha }}
            - Frontend: ghcr.io/${{ github.repository_owner }}/umi-mikan-frontend:${{ steps.workflow-details.outputs.sha }}
            - Scheduler: ghcr.io/${{ github.repository_owner }}/umi-mikan-scheduler:${{ steps.workflow-details.outputs.sha }}
            - Subscriber: ghcr.io/${{ github.repository_owner }}/umi-mikan-subscriber:${{ steps.workflow-details.outputs.sha }}
          color: ${{ needs.check-all-builds.outputs.all-success == 'true' && '3066993' || '15158332' }}
          url: ${{ steps.workflow-details.outputs.pr-url }}
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"