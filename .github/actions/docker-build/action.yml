name: 'Docker Build and Push'
description: 'Build and push Docker image to container registry'
inputs:
  service:
    description: 'Service name to build'
    required: true
  registry:
    description: 'Container registry to push to'
    required: false
    default: 'ghcr.io'
  platforms:
    description: 'Target platforms for builds'
    required: false
    default: 'linux/arm64,linux/amd64'
  push:
    description: 'Whether to push the built images'
    required: false
    default: 'true'
  github-token:
    description: 'GitHub token for registry authentication'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.repository_owner }}
        password: ${{ inputs.github-token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache-${{ inputs.service }}
        key: ${{ runner.os }}-buildx-${{ inputs.service }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ inputs.service }}-

    - name: Set build context
      id: context
      shell: bash
      run: |
        case "${{ inputs.service }}" in
          "backend"|"scheduler"|"subscriber")
            echo "context=./backend" >> $GITHUB_OUTPUT
            ;;
          "frontend")
            echo "context=./frontend" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "context=./${{ inputs.service }}" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Build and Push to Container Registry
      uses: docker/build-push-action@v5
      with:
        context: ${{ steps.context.outputs.context }}
        file: ./infra/prod/${{ inputs.service }}/Dockerfile
        push: ${{ inputs.push }}
        platforms: ${{ inputs.platforms }}
        tags: |
          ${{ inputs.registry }}/${{ github.repository_owner }}/umi-mikan-${{ inputs.service }}:${{ github.sha }}
          ${{ inputs.registry }}/${{ github.repository_owner }}/umi-mikan-${{ inputs.service }}:latest
        labels: latest
        cache-from: type=local,src=/tmp/.buildx-cache-${{ inputs.service }}
        cache-to: type=local,dest=/tmp/.buildx-cache-${{ inputs.service }}-new,mode=max

    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache-${{ inputs.service }}
        mv /tmp/.buildx-cache-${{ inputs.service }}-new /tmp/.buildx-cache-${{ inputs.service }}