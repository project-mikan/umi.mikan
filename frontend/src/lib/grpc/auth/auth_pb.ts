// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file auth/auth.proto (package auth, syntax proto3)
/* eslint-disable */

import type {
	GenFile,
	GenMessage,
	GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
	fileDesc,
	messageDesc,
	serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file auth/auth.proto.
 */
export const file_auth_auth: GenFile =
	/*@__PURE__*/
	fileDesc(
		"Cg9hdXRoL2F1dGgucHJvdG8SBGF1dGgiMgoZUmVmcmVzaEFjY2Vzc1Rva2VuUmVxdWVzdBIVCg1yZWZyZXNoX3Rva2VuGAEgASgJIkoKGVJlZ2lzdGVyQnlQYXNzd29yZFJlcXVlc3QSDQoFZW1haWwYASABKAkSEAoIcGFzc3dvcmQYAiABKAkSDAoEbmFtZRgDIAEoCSI5ChZMb2dpbkJ5UGFzc3dvcmRSZXF1ZXN0Eg0KBWVtYWlsGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJImMKDEF1dGhSZXNwb25zZRIUCgxhY2Nlc3NfdG9rZW4YASABKAkSEgoKdG9rZW5fdHlwZRgCIAEoCRISCgpleHBpcmVzX2luGAMgASgFEhUKDXJlZnJlc2hfdG9rZW4YBCABKAkiKQoVVXBkYXRlVXNlck5hbWVSZXF1ZXN0EhAKCG5ld19uYW1lGAEgASgJIjoKFlVwZGF0ZVVzZXJOYW1lUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJIkcKFUNoYW5nZVBhc3N3b3JkUmVxdWVzdBIYChBjdXJyZW50X3Bhc3N3b3JkGAEgASgJEhQKDG5ld19wYXNzd29yZBgCIAEoCSI6ChZDaGFuZ2VQYXNzd29yZFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSI8ChVVcGRhdGVMTE1Ub2tlblJlcXVlc3QSFAoMbGxtX3Byb3ZpZGVyGAEgASgFEg0KBXRva2VuGAIgASgJIjoKFlVwZGF0ZUxMTVRva2VuUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJIhQKEkdldFVzZXJJbmZvUmVxdWVzdCJaChNHZXRVc2VySW5mb1Jlc3BvbnNlEgwKBG5hbWUYASABKAkSDQoFZW1haWwYAiABKAkSJgoKbGxtX3Rva2VucxgDIAMoCzISLmF1dGguTExNVG9rZW5JbmZvIjMKDExMTVRva2VuSW5mbxIUCgxsbG1fcHJvdmlkZXIYASABKAUSDQoFdG9rZW4YAiABKAkiLQoVRGVsZXRlTExNVG9rZW5SZXF1ZXN0EhQKDGxsbV9wcm92aWRlchgBIAEoBSI6ChZEZWxldGVMTE1Ub2tlblJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSIWChREZWxldGVBY2NvdW50UmVxdWVzdCI5ChVEZWxldGVBY2NvdW50UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJMqoFCgtBdXRoU2VydmljZRJJChJSZWdpc3RlckJ5UGFzc3dvcmQSHy5hdXRoLlJlZ2lzdGVyQnlQYXNzd29yZFJlcXVlc3QaEi5hdXRoLkF1dGhSZXNwb25zZRJDCg9Mb2dpbkJ5UGFzc3dvcmQSHC5hdXRoLkxvZ2luQnlQYXNzd29yZFJlcXVlc3QaEi5hdXRoLkF1dGhSZXNwb25zZRJJChJSZWZyZXNoQWNjZXNzVG9rZW4SHy5hdXRoLlJlZnJlc2hBY2Nlc3NUb2tlblJlcXVlc3QaEi5hdXRoLkF1dGhSZXNwb25zZRJLCg5VcGRhdGVVc2VyTmFtZRIbLmF1dGguVXBkYXRlVXNlck5hbWVSZXF1ZXN0GhwuYXV0aC5VcGRhdGVVc2VyTmFtZVJlc3BvbnNlEksKDkNoYW5nZVBhc3N3b3JkEhsuYXV0aC5DaGFuZ2VQYXNzd29yZFJlcXVlc3QaHC5hdXRoLkNoYW5nZVBhc3N3b3JkUmVzcG9uc2USSwoOVXBkYXRlTExNVG9rZW4SGy5hdXRoLlVwZGF0ZUxMTVRva2VuUmVxdWVzdBocLmF1dGguVXBkYXRlTExNVG9rZW5SZXNwb25zZRJCCgtHZXRVc2VySW5mbxIYLmF1dGguR2V0VXNlckluZm9SZXF1ZXN0GhkuYXV0aC5HZXRVc2VySW5mb1Jlc3BvbnNlEksKDkRlbGV0ZUxMTVRva2VuEhsuYXV0aC5EZWxldGVMTE1Ub2tlblJlcXVlc3QaHC5hdXRoLkRlbGV0ZUxMTVRva2VuUmVzcG9uc2USSAoNRGVsZXRlQWNjb3VudBIaLmF1dGguRGVsZXRlQWNjb3VudFJlcXVlc3QaGy5hdXRoLkRlbGV0ZUFjY291bnRSZXNwb25zZUJAWj5naXRodWIuY29tL3Byb2plY3QtbWlrYW4vdW1pLm1pa2FuL2JhY2tlbmQvaW5mcmFzdHJ1Y3R1cmUvZ3JwY2IGcHJvdG8z",
	);

/**
 * アクセストークン更新用のリクエスト
 *
 * @generated from message auth.RefreshAccessTokenRequest
 */
export type RefreshAccessTokenRequest =
	Message<"auth.RefreshAccessTokenRequest"> & {
		/**
		 * @generated from field: string refresh_token = 1;
		 */
		refreshToken: string;
	};

/**
 * Describes the message auth.RefreshAccessTokenRequest.
 * Use `create(RefreshAccessTokenRequestSchema)` to create a new message.
 */
export const RefreshAccessTokenRequestSchema: GenMessage<RefreshAccessTokenRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 0);

/**
 * パスワード新規登録用のリクエスト
 *
 * @generated from message auth.RegisterByPasswordRequest
 */
export type RegisterByPasswordRequest =
	Message<"auth.RegisterByPasswordRequest"> & {
		/**
		 * @generated from field: string email = 1;
		 */
		email: string;

		/**
		 * @generated from field: string password = 2;
		 */
		password: string;

		/**
		 * @generated from field: string name = 3;
		 */
		name: string;
	};

/**
 * Describes the message auth.RegisterByPasswordRequest.
 * Use `create(RegisterByPasswordRequestSchema)` to create a new message.
 */
export const RegisterByPasswordRequestSchema: GenMessage<RegisterByPasswordRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 1);

/**
 * パスワードログイン用のリクエスト
 *
 * @generated from message auth.LoginByPasswordRequest
 */
export type LoginByPasswordRequest = Message<"auth.LoginByPasswordRequest"> & {
	/**
	 * @generated from field: string email = 1;
	 */
	email: string;

	/**
	 * @generated from field: string password = 2;
	 */
	password: string;
};

/**
 * Describes the message auth.LoginByPasswordRequest.
 * Use `create(LoginByPasswordRequestSchema)` to create a new message.
 */
export const LoginByPasswordRequestSchema: GenMessage<LoginByPasswordRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 2);

/**
 * レスポンスはログイン方法に関わらず共通
 *
 * @generated from message auth.AuthResponse
 */
export type AuthResponse = Message<"auth.AuthResponse"> & {
	/**
	 * @generated from field: string access_token = 1;
	 */
	accessToken: string;

	/**
	 * @generated from field: string token_type = 2;
	 */
	tokenType: string;

	/**
	 * 秒単位
	 *
	 * @generated from field: int32 expires_in = 3;
	 */
	expiresIn: number;

	/**
	 * @generated from field: string refresh_token = 4;
	 */
	refreshToken: string;
};

/**
 * Describes the message auth.AuthResponse.
 * Use `create(AuthResponseSchema)` to create a new message.
 */
export const AuthResponseSchema: GenMessage<AuthResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 3);

/**
 * ユーザー名更新用のリクエスト
 *
 * @generated from message auth.UpdateUserNameRequest
 */
export type UpdateUserNameRequest = Message<"auth.UpdateUserNameRequest"> & {
	/**
	 * @generated from field: string new_name = 1;
	 */
	newName: string;
};

/**
 * Describes the message auth.UpdateUserNameRequest.
 * Use `create(UpdateUserNameRequestSchema)` to create a new message.
 */
export const UpdateUserNameRequestSchema: GenMessage<UpdateUserNameRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 4);

/**
 * ユーザー名更新用のレスポンス
 *
 * @generated from message auth.UpdateUserNameResponse
 */
export type UpdateUserNameResponse = Message<"auth.UpdateUserNameResponse"> & {
	/**
	 * @generated from field: bool success = 1;
	 */
	success: boolean;

	/**
	 * @generated from field: string message = 2;
	 */
	message: string;
};

/**
 * Describes the message auth.UpdateUserNameResponse.
 * Use `create(UpdateUserNameResponseSchema)` to create a new message.
 */
export const UpdateUserNameResponseSchema: GenMessage<UpdateUserNameResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 5);

/**
 * パスワード変更用のリクエスト
 *
 * @generated from message auth.ChangePasswordRequest
 */
export type ChangePasswordRequest = Message<"auth.ChangePasswordRequest"> & {
	/**
	 * @generated from field: string current_password = 1;
	 */
	currentPassword: string;

	/**
	 * @generated from field: string new_password = 2;
	 */
	newPassword: string;
};

/**
 * Describes the message auth.ChangePasswordRequest.
 * Use `create(ChangePasswordRequestSchema)` to create a new message.
 */
export const ChangePasswordRequestSchema: GenMessage<ChangePasswordRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 6);

/**
 * パスワード変更用のレスポンス
 *
 * @generated from message auth.ChangePasswordResponse
 */
export type ChangePasswordResponse = Message<"auth.ChangePasswordResponse"> & {
	/**
	 * @generated from field: bool success = 1;
	 */
	success: boolean;

	/**
	 * @generated from field: string message = 2;
	 */
	message: string;
};

/**
 * Describes the message auth.ChangePasswordResponse.
 * Use `create(ChangePasswordResponseSchema)` to create a new message.
 */
export const ChangePasswordResponseSchema: GenMessage<ChangePasswordResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 7);

/**
 * LLMトークン更新用のリクエスト
 *
 * @generated from message auth.UpdateLLMTokenRequest
 */
export type UpdateLLMTokenRequest = Message<"auth.UpdateLLMTokenRequest"> & {
	/**
	 * 0:Gemini
	 *
	 * @generated from field: int32 llm_provider = 1;
	 */
	llmProvider: number;

	/**
	 * @generated from field: string token = 2;
	 */
	token: string;
};

/**
 * Describes the message auth.UpdateLLMTokenRequest.
 * Use `create(UpdateLLMTokenRequestSchema)` to create a new message.
 */
export const UpdateLLMTokenRequestSchema: GenMessage<UpdateLLMTokenRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 8);

/**
 * LLMトークン更新用のレスポンス
 *
 * @generated from message auth.UpdateLLMTokenResponse
 */
export type UpdateLLMTokenResponse = Message<"auth.UpdateLLMTokenResponse"> & {
	/**
	 * @generated from field: bool success = 1;
	 */
	success: boolean;

	/**
	 * @generated from field: string message = 2;
	 */
	message: string;
};

/**
 * Describes the message auth.UpdateLLMTokenResponse.
 * Use `create(UpdateLLMTokenResponseSchema)` to create a new message.
 */
export const UpdateLLMTokenResponseSchema: GenMessage<UpdateLLMTokenResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 9);

/**
 * ユーザー情報取得用のリクエスト
 *
 * 空のリクエスト（認証はヘッダーから）
 *
 * @generated from message auth.GetUserInfoRequest
 */
export type GetUserInfoRequest = Message<"auth.GetUserInfoRequest"> & {};

/**
 * Describes the message auth.GetUserInfoRequest.
 * Use `create(GetUserInfoRequestSchema)` to create a new message.
 */
export const GetUserInfoRequestSchema: GenMessage<GetUserInfoRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 10);

/**
 * ユーザー情報取得用のレスポンス
 *
 * @generated from message auth.GetUserInfoResponse
 */
export type GetUserInfoResponse = Message<"auth.GetUserInfoResponse"> & {
	/**
	 * @generated from field: string name = 1;
	 */
	name: string;

	/**
	 * @generated from field: string email = 2;
	 */
	email: string;

	/**
	 * LLMトークン情報（存在する場合）
	 *
	 * @generated from field: repeated auth.LLMTokenInfo llm_tokens = 3;
	 */
	llmTokens: LLMTokenInfo[];
};

/**
 * Describes the message auth.GetUserInfoResponse.
 * Use `create(GetUserInfoResponseSchema)` to create a new message.
 */
export const GetUserInfoResponseSchema: GenMessage<GetUserInfoResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 11);

/**
 * LLMトークン情報
 *
 * @generated from message auth.LLMTokenInfo
 */
export type LLMTokenInfo = Message<"auth.LLMTokenInfo"> & {
	/**
	 * 0:Gemini
	 *
	 * @generated from field: int32 llm_provider = 1;
	 */
	llmProvider: number;

	/**
	 * @generated from field: string token = 2;
	 */
	token: string;
};

/**
 * Describes the message auth.LLMTokenInfo.
 * Use `create(LLMTokenInfoSchema)` to create a new message.
 */
export const LLMTokenInfoSchema: GenMessage<LLMTokenInfo> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 12);

/**
 * LLMトークン削除用のリクエスト
 *
 * @generated from message auth.DeleteLLMTokenRequest
 */
export type DeleteLLMTokenRequest = Message<"auth.DeleteLLMTokenRequest"> & {
	/**
	 * 0:Gemini
	 *
	 * @generated from field: int32 llm_provider = 1;
	 */
	llmProvider: number;
};

/**
 * Describes the message auth.DeleteLLMTokenRequest.
 * Use `create(DeleteLLMTokenRequestSchema)` to create a new message.
 */
export const DeleteLLMTokenRequestSchema: GenMessage<DeleteLLMTokenRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 13);

/**
 * LLMトークン削除用のレスポンス
 *
 * @generated from message auth.DeleteLLMTokenResponse
 */
export type DeleteLLMTokenResponse = Message<"auth.DeleteLLMTokenResponse"> & {
	/**
	 * @generated from field: bool success = 1;
	 */
	success: boolean;

	/**
	 * @generated from field: string message = 2;
	 */
	message: string;
};

/**
 * Describes the message auth.DeleteLLMTokenResponse.
 * Use `create(DeleteLLMTokenResponseSchema)` to create a new message.
 */
export const DeleteLLMTokenResponseSchema: GenMessage<DeleteLLMTokenResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 14);

/**
 * アカウント削除用のリクエスト
 *
 * 空のリクエスト（認証はヘッダーから）
 *
 * @generated from message auth.DeleteAccountRequest
 */
export type DeleteAccountRequest = Message<"auth.DeleteAccountRequest"> & {};

/**
 * Describes the message auth.DeleteAccountRequest.
 * Use `create(DeleteAccountRequestSchema)` to create a new message.
 */
export const DeleteAccountRequestSchema: GenMessage<DeleteAccountRequest> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 15);

/**
 * アカウント削除用のレスポンス
 *
 * @generated from message auth.DeleteAccountResponse
 */
export type DeleteAccountResponse = Message<"auth.DeleteAccountResponse"> & {
	/**
	 * @generated from field: bool success = 1;
	 */
	success: boolean;

	/**
	 * @generated from field: string message = 2;
	 */
	message: string;
};

/**
 * Describes the message auth.DeleteAccountResponse.
 * Use `create(DeleteAccountResponseSchema)` to create a new message.
 */
export const DeleteAccountResponseSchema: GenMessage<DeleteAccountResponse> =
	/*@__PURE__*/
	messageDesc(file_auth_auth, 16);

/**
 * @generated from service auth.AuthService
 */
export const AuthService: GenService<{
	/**
	 * 新規登録
	 *
	 * @generated from rpc auth.AuthService.RegisterByPassword
	 */
	registerByPassword: {
		methodKind: "unary";
		input: typeof RegisterByPasswordRequestSchema;
		output: typeof AuthResponseSchema;
	};
	/**
	 * ログイン
	 *
	 * @generated from rpc auth.AuthService.LoginByPassword
	 */
	loginByPassword: {
		methodKind: "unary";
		input: typeof LoginByPasswordRequestSchema;
		output: typeof AuthResponseSchema;
	};
	/**
	 * AccessTokenの更新
	 *
	 * @generated from rpc auth.AuthService.RefreshAccessToken
	 */
	refreshAccessToken: {
		methodKind: "unary";
		input: typeof RefreshAccessTokenRequestSchema;
		output: typeof AuthResponseSchema;
	};
	/**
	 * ユーザー名変更
	 *
	 * @generated from rpc auth.AuthService.UpdateUserName
	 */
	updateUserName: {
		methodKind: "unary";
		input: typeof UpdateUserNameRequestSchema;
		output: typeof UpdateUserNameResponseSchema;
	};
	/**
	 * パスワード変更
	 *
	 * @generated from rpc auth.AuthService.ChangePassword
	 */
	changePassword: {
		methodKind: "unary";
		input: typeof ChangePasswordRequestSchema;
		output: typeof ChangePasswordResponseSchema;
	};
	/**
	 * LLMトークン更新
	 *
	 * @generated from rpc auth.AuthService.UpdateLLMToken
	 */
	updateLLMToken: {
		methodKind: "unary";
		input: typeof UpdateLLMTokenRequestSchema;
		output: typeof UpdateLLMTokenResponseSchema;
	};
	/**
	 * ユーザー情報取得
	 *
	 * @generated from rpc auth.AuthService.GetUserInfo
	 */
	getUserInfo: {
		methodKind: "unary";
		input: typeof GetUserInfoRequestSchema;
		output: typeof GetUserInfoResponseSchema;
	};
	/**
	 * LLMトークン削除
	 *
	 * @generated from rpc auth.AuthService.DeleteLLMToken
	 */
	deleteLLMToken: {
		methodKind: "unary";
		input: typeof DeleteLLMTokenRequestSchema;
		output: typeof DeleteLLMTokenResponseSchema;
	};
	/**
	 * アカウント削除
	 *
	 * @generated from rpc auth.AuthService.DeleteAccount
	 */
	deleteAccount: {
		methodKind: "unary";
		input: typeof DeleteAccountRequestSchema;
		output: typeof DeleteAccountResponseSchema;
	};
}> = /*@__PURE__*/ serviceDesc(file_auth_auth, 0);
