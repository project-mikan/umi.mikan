// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file diary/diary.proto (package diary, syntax proto3)
/* eslint-disable */

import type {
	GenFile,
	GenMessage,
	GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
	fileDesc,
	messageDesc,
	serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import type { Position } from "../entity/entity_pb";
import { file_entity_entity } from "../entity/entity_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file diary/diary.proto.
 */
export const file_diary_diary: GenFile =
	/*@__PURE__*/
	fileDesc(
		"ChFkaWFyeS9kaWFyeS5wcm90bxIFZGlhcnkiLwoDWU1EEgwKBHllYXIYASABKA0SDQoFbW9udGgYAiABKA0SCwoDZGF5GAMgASgNIiEKAllNEgwKBHllYXIYASABKA0SDQoFbW9udGgYAiABKA0inQEKCkRpYXJ5RW50cnkSCgoCaWQYASABKAkSGAoEZGF0ZRgCIAEoCzIKLmRpYXJ5LllNRBIPCgdjb250ZW50GAMgASgJEhIKCmNyZWF0ZWRfYXQYBCABKAMSEgoKdXBkYXRlZF9hdBgFIAEoAxIwCg5kaWFyeV9lbnRpdGllcxgGIAMoCzIYLmRpYXJ5LkRpYXJ5RW50aXR5T3V0cHV0IksKEURpYXJ5RW50aXR5T3V0cHV0EhEKCWVudGl0eV9pZBgBIAEoCRIjCglwb3NpdGlvbnMYAiADKAsyEC5lbnRpdHkuUG9zaXRpb24iSgoQRGlhcnlFbnRpdHlJbnB1dBIRCgllbnRpdHlfaWQYASABKAkSIwoJcG9zaXRpb25zGAIgAygLMhAuZW50aXR5LlBvc2l0aW9uInUKF0NyZWF0ZURpYXJ5RW50cnlSZXF1ZXN0Eg8KB2NvbnRlbnQYASABKAkSGAoEZGF0ZRgCIAEoCzIKLmRpYXJ5LllNRBIvCg5kaWFyeV9lbnRpdGllcxgDIAMoCzIXLmRpYXJ5LkRpYXJ5RW50aXR5SW5wdXQiPAoYQ3JlYXRlRGlhcnlFbnRyeVJlc3BvbnNlEiAKBWVudHJ5GAEgASgLMhEuZGlhcnkuRGlhcnlFbnRyeSIwChRHZXREaWFyeUVudHJ5UmVxdWVzdBIYCgRkYXRlGAEgASgLMgouZGlhcnkuWU1EIjMKFkdldERpYXJ5RW50cmllc1JlcXVlc3QSGQoFZGF0ZXMYASADKAsyCi5kaWFyeS5ZTUQiOQodR2V0RGlhcnlFbnRyaWVzQnlNb250aFJlcXVlc3QSGAoFbW9udGgYASABKAsyCS5kaWFyeS5ZTSIsChlTZWFyY2hEaWFyeUVudHJpZXNSZXF1ZXN0Eg8KB2tleXdvcmQYASABKAkiWgoaU2VhcmNoRGlhcnlFbnRyaWVzUmVzcG9uc2USGAoQc2VhcmNoZWRfa2V5d29yZBgBIAEoCRIiCgdlbnRyaWVzGAIgAygLMhEuZGlhcnkuRGlhcnlFbnRyeSI9ChdHZXREaWFyeUVudHJpZXNSZXNwb25zZRIiCgdlbnRyaWVzGAEgAygLMhEuZGlhcnkuRGlhcnlFbnRyeSJECh5HZXREaWFyeUVudHJpZXNCeU1vbnRoUmVzcG9uc2USIgoHZW50cmllcxgBIAMoCzIRLmRpYXJ5LkRpYXJ5RW50cnkiOQoVR2V0RGlhcnlFbnRyeVJlc3BvbnNlEiAKBWVudHJ5GAEgASgLMhEuZGlhcnkuRGlhcnlFbnRyeSKQAQoXVXBkYXRlRGlhcnlFbnRyeVJlcXVlc3QSCgoCaWQYASABKAkSDQoFdGl0bGUYAiABKAkSDwoHY29udGVudBgDIAEoCRIYCgRkYXRlGAQgASgLMgouZGlhcnkuWU1EEi8KDmRpYXJ5X2VudGl0aWVzGAUgAygLMhcuZGlhcnkuRGlhcnlFbnRpdHlJbnB1dCI8ChhVcGRhdGVEaWFyeUVudHJ5UmVzcG9uc2USIAoFZW50cnkYASABKAsyES5kaWFyeS5EaWFyeUVudHJ5IiUKF0RlbGV0ZURpYXJ5RW50cnlSZXF1ZXN0EgoKAmlkGAEgASgJIisKGERlbGV0ZURpYXJ5RW50cnlSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIm8KDk1vbnRobHlTdW1tYXJ5EgoKAmlkGAEgASgJEhgKBW1vbnRoGAIgASgLMgkuZGlhcnkuWU0SDwoHc3VtbWFyeRgDIAEoCRISCgpjcmVhdGVkX2F0GAQgASgDEhIKCnVwZGF0ZWRfYXQYBSABKAMiOQodR2VuZXJhdGVNb250aGx5U3VtbWFyeVJlcXVlc3QSGAoFbW9udGgYASABKAsyCS5kaWFyeS5ZTSJICh5HZW5lcmF0ZU1vbnRobHlTdW1tYXJ5UmVzcG9uc2USJgoHc3VtbWFyeRgBIAEoCzIVLmRpYXJ5Lk1vbnRobHlTdW1tYXJ5IjQKGEdldE1vbnRobHlTdW1tYXJ5UmVxdWVzdBIYCgVtb250aBgBIAEoCzIJLmRpYXJ5LllNIkMKGUdldE1vbnRobHlTdW1tYXJ5UmVzcG9uc2USJgoHc3VtbWFyeRgBIAEoCzIVLmRpYXJ5Lk1vbnRobHlTdW1tYXJ5In8KDERhaWx5U3VtbWFyeRIKCgJpZBgBIAEoCRIQCghkaWFyeV9pZBgCIAEoCRIYCgRkYXRlGAMgASgLMgouZGlhcnkuWU1EEg8KB3N1bW1hcnkYBCABKAkSEgoKY3JlYXRlZF9hdBgFIAEoAxISCgp1cGRhdGVkX2F0GAYgASgDIi8KG0dlbmVyYXRlRGFpbHlTdW1tYXJ5UmVxdWVzdBIQCghkaWFyeV9pZBgBIAEoCSJEChxHZW5lcmF0ZURhaWx5U3VtbWFyeVJlc3BvbnNlEiQKB3N1bW1hcnkYASABKAsyEy5kaWFyeS5EYWlseVN1bW1hcnkiMgoWR2V0RGFpbHlTdW1tYXJ5UmVxdWVzdBIYCgRkYXRlGAEgASgLMgouZGlhcnkuWU1EIj8KF0dldERhaWx5U3VtbWFyeVJlc3BvbnNlEiQKB3N1bW1hcnkYASABKAsyEy5kaWFyeS5EYWlseVN1bW1hcnkiFwoVR2V0TGF0ZXN0VHJlbmRSZXF1ZXN0ImoKFkdldExhdGVzdFRyZW5kUmVzcG9uc2USEAoIYW5hbHlzaXMYASABKAkSFAoMcGVyaW9kX3N0YXJ0GAIgASgJEhIKCnBlcmlvZF9lbmQYAyABKAkSFAoMZ2VuZXJhdGVkX2F0GAQgASgJIhsKGVRyaWdnZXJMYXRlc3RUcmVuZFJlcXVlc3QiPgoaVHJpZ2dlckxhdGVzdFRyZW5kUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJMokJCgxEaWFyeVNlcnZpY2USUwoQQ3JlYXRlRGlhcnlFbnRyeRIeLmRpYXJ5LkNyZWF0ZURpYXJ5RW50cnlSZXF1ZXN0Gh8uZGlhcnkuQ3JlYXRlRGlhcnlFbnRyeVJlc3BvbnNlElMKEFVwZGF0ZURpYXJ5RW50cnkSHi5kaWFyeS5VcGRhdGVEaWFyeUVudHJ5UmVxdWVzdBofLmRpYXJ5LlVwZGF0ZURpYXJ5RW50cnlSZXNwb25zZRJTChBEZWxldGVEaWFyeUVudHJ5Eh4uZGlhcnkuRGVsZXRlRGlhcnlFbnRyeVJlcXVlc3QaHy5kaWFyeS5EZWxldGVEaWFyeUVudHJ5UmVzcG9uc2USSgoNR2V0RGlhcnlFbnRyeRIbLmRpYXJ5LkdldERpYXJ5RW50cnlSZXF1ZXN0GhwuZGlhcnkuR2V0RGlhcnlFbnRyeVJlc3BvbnNlElAKD0dldERpYXJ5RW50cmllcxIdLmRpYXJ5LkdldERpYXJ5RW50cmllc1JlcXVlc3QaHi5kaWFyeS5HZXREaWFyeUVudHJpZXNSZXNwb25zZRJlChZHZXREaWFyeUVudHJpZXNCeU1vbnRoEiQuZGlhcnkuR2V0RGlhcnlFbnRyaWVzQnlNb250aFJlcXVlc3QaJS5kaWFyeS5HZXREaWFyeUVudHJpZXNCeU1vbnRoUmVzcG9uc2USWQoSU2VhcmNoRGlhcnlFbnRyaWVzEiAuZGlhcnkuU2VhcmNoRGlhcnlFbnRyaWVzUmVxdWVzdBohLmRpYXJ5LlNlYXJjaERpYXJ5RW50cmllc1Jlc3BvbnNlEmUKFkdlbmVyYXRlTW9udGhseVN1bW1hcnkSJC5kaWFyeS5HZW5lcmF0ZU1vbnRobHlTdW1tYXJ5UmVxdWVzdBolLmRpYXJ5LkdlbmVyYXRlTW9udGhseVN1bW1hcnlSZXNwb25zZRJWChFHZXRNb250aGx5U3VtbWFyeRIfLmRpYXJ5LkdldE1vbnRobHlTdW1tYXJ5UmVxdWVzdBogLmRpYXJ5LkdldE1vbnRobHlTdW1tYXJ5UmVzcG9uc2USXwoUR2VuZXJhdGVEYWlseVN1bW1hcnkSIi5kaWFyeS5HZW5lcmF0ZURhaWx5U3VtbWFyeVJlcXVlc3QaIy5kaWFyeS5HZW5lcmF0ZURhaWx5U3VtbWFyeVJlc3BvbnNlElAKD0dldERhaWx5U3VtbWFyeRIdLmRpYXJ5LkdldERhaWx5U3VtbWFyeVJlcXVlc3QaHi5kaWFyeS5HZXREYWlseVN1bW1hcnlSZXNwb25zZRJNCg5HZXRMYXRlc3RUcmVuZBIcLmRpYXJ5LkdldExhdGVzdFRyZW5kUmVxdWVzdBodLmRpYXJ5LkdldExhdGVzdFRyZW5kUmVzcG9uc2USWQoSVHJpZ2dlckxhdGVzdFRyZW5kEiAuZGlhcnkuVHJpZ2dlckxhdGVzdFRyZW5kUmVxdWVzdBohLmRpYXJ5LlRyaWdnZXJMYXRlc3RUcmVuZFJlc3BvbnNlQkBaPmdpdGh1Yi5jb20vcHJvamVjdC1taWthbi91bWkubWlrYW4vYmFja2VuZC9pbmZyYXN0cnVjdHVyZS9ncnBjYgZwcm90bzM",
		[file_entity_entity],
	);

/**
 * @generated from message diary.YMD
 */
export type YMD = Message<"diary.YMD"> & {
	/**
	 * @generated from field: uint32 year = 1;
	 */
	year: number;

	/**
	 * @generated from field: uint32 month = 2;
	 */
	month: number;

	/**
	 * @generated from field: uint32 day = 3;
	 */
	day: number;
};

/**
 * Describes the message diary.YMD.
 * Use `create(YMDSchema)` to create a new message.
 */
export const YMDSchema: GenMessage<YMD> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 0);

/**
 * @generated from message diary.YM
 */
export type YM = Message<"diary.YM"> & {
	/**
	 * @generated from field: uint32 year = 1;
	 */
	year: number;

	/**
	 * @generated from field: uint32 month = 2;
	 */
	month: number;
};

/**
 * Describes the message diary.YM.
 * Use `create(YMSchema)` to create a new message.
 */
export const YMSchema: GenMessage<YM> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 1);

/**
 * 日記エントリのメッセージ
 *
 * @generated from message diary.DiaryEntry
 */
export type DiaryEntry = Message<"diary.DiaryEntry"> & {
	/**
	 * 日記ID
	 *
	 * @generated from field: string id = 1;
	 */
	id: string;

	/**
	 * 日付
	 *
	 * @generated from field: diary.YMD date = 2;
	 */
	date?: YMD;

	/**
	 * 内容
	 *
	 * @generated from field: string content = 3;
	 */
	content: string;

	/**
	 * 作成日時（Unix timestamp）
	 *
	 * @generated from field: int64 created_at = 4;
	 */
	createdAt: bigint;

	/**
	 * 更新日時（Unix timestamp）
	 *
	 * @generated from field: int64 updated_at = 5;
	 */
	updatedAt: bigint;

	/**
	 * エンティティと位置情報のリスト
	 *
	 * @generated from field: repeated diary.DiaryEntityOutput diary_entities = 6;
	 */
	diaryEntities: DiaryEntityOutput[];
};

/**
 * Describes the message diary.DiaryEntry.
 * Use `create(DiaryEntrySchema)` to create a new message.
 */
export const DiaryEntrySchema: GenMessage<DiaryEntry> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 2);

/**
 * エンティティ出力（取得時）
 *
 * @generated from message diary.DiaryEntityOutput
 */
export type DiaryEntityOutput = Message<"diary.DiaryEntityOutput"> & {
	/**
	 * @generated from field: string entity_id = 1;
	 */
	entityId: string;

	/**
	 * 位置情報（alias_idを含む）
	 *
	 * @generated from field: repeated entity.Position positions = 2;
	 */
	positions: Position[];
};

/**
 * Describes the message diary.DiaryEntityOutput.
 * Use `create(DiaryEntityOutputSchema)` to create a new message.
 */
export const DiaryEntityOutputSchema: GenMessage<DiaryEntityOutput> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 3);

/**
 * エンティティと位置情報
 *
 * @generated from message diary.DiaryEntityInput
 */
export type DiaryEntityInput = Message<"diary.DiaryEntityInput"> & {
	/**
	 * @generated from field: string entity_id = 1;
	 */
	entityId: string;

	/**
	 * 位置情報（alias_idを含む）
	 *
	 * @generated from field: repeated entity.Position positions = 2;
	 */
	positions: Position[];
};

/**
 * Describes the message diary.DiaryEntityInput.
 * Use `create(DiaryEntityInputSchema)` to create a new message.
 */
export const DiaryEntityInputSchema: GenMessage<DiaryEntityInput> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 4);

/**
 * 新しい日記エントリを作成するためのリクエスト
 *
 * @generated from message diary.CreateDiaryEntryRequest
 */
export type CreateDiaryEntryRequest =
	Message<"diary.CreateDiaryEntryRequest"> & {
		/**
		 * @generated from field: string content = 1;
		 */
		content: string;

		/**
		 * @generated from field: diary.YMD date = 2;
		 */
		date?: YMD;

		/**
		 * エンティティと位置情報のリスト
		 *
		 * @generated from field: repeated diary.DiaryEntityInput diary_entities = 3;
		 */
		diaryEntities: DiaryEntityInput[];
	};

/**
 * Describes the message diary.CreateDiaryEntryRequest.
 * Use `create(CreateDiaryEntryRequestSchema)` to create a new message.
 */
export const CreateDiaryEntryRequestSchema: GenMessage<CreateDiaryEntryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 5);

/**
 * 日記エントリを作成した結果を返すレスポンス
 *
 * @generated from message diary.CreateDiaryEntryResponse
 */
export type CreateDiaryEntryResponse =
	Message<"diary.CreateDiaryEntryResponse"> & {
		/**
		 * @generated from field: diary.DiaryEntry entry = 1;
		 */
		entry?: DiaryEntry;
	};

/**
 * Describes the message diary.CreateDiaryEntryResponse.
 * Use `create(CreateDiaryEntryResponseSchema)` to create a new message.
 */
export const CreateDiaryEntryResponseSchema: GenMessage<CreateDiaryEntryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 6);

/**
 * 特定の日記エントリを取得するためのリクエスト
 *
 * @generated from message diary.GetDiaryEntryRequest
 */
export type GetDiaryEntryRequest = Message<"diary.GetDiaryEntryRequest"> & {
	/**
	 * 日付を指定して取得
	 *
	 * @generated from field: diary.YMD date = 1;
	 */
	date?: YMD;
};

/**
 * Describes the message diary.GetDiaryEntryRequest.
 * Use `create(GetDiaryEntryRequestSchema)` to create a new message.
 */
export const GetDiaryEntryRequestSchema: GenMessage<GetDiaryEntryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 7);

/**
 * 複数日記エントリを取得するためのリクエスト (e.g., by range or count)
 *
 * @generated from message diary.GetDiaryEntriesRequest
 */
export type GetDiaryEntriesRequest = Message<"diary.GetDiaryEntriesRequest"> & {
	/**
	 * 取得したい日付の配列
	 *
	 * @generated from field: repeated diary.YMD dates = 1;
	 */
	dates: YMD[];
};

/**
 * Describes the message diary.GetDiaryEntriesRequest.
 * Use `create(GetDiaryEntriesRequestSchema)` to create a new message.
 */
export const GetDiaryEntriesRequestSchema: GenMessage<GetDiaryEntriesRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 8);

/**
 * 月ごとに日記エントリを取得するためのリクエスト
 *
 * @generated from message diary.GetDiaryEntriesByMonthRequest
 */
export type GetDiaryEntriesByMonthRequest =
	Message<"diary.GetDiaryEntriesByMonthRequest"> & {
		/**
		 * 年月を指定
		 *
		 * @generated from field: diary.YM month = 1;
		 */
		month?: YM;
	};

/**
 * Describes the message diary.GetDiaryEntriesByMonthRequest.
 * Use `create(GetDiaryEntriesByMonthRequestSchema)` to create a new message.
 */
export const GetDiaryEntriesByMonthRequestSchema: GenMessage<GetDiaryEntriesByMonthRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 9);

/**
 * @generated from message diary.SearchDiaryEntriesRequest
 */
export type SearchDiaryEntriesRequest =
	Message<"diary.SearchDiaryEntriesRequest"> & {
		/**
		 * @generated from field: string keyword = 1;
		 */
		keyword: string;
	};

/**
 * Describes the message diary.SearchDiaryEntriesRequest.
 * Use `create(SearchDiaryEntriesRequestSchema)` to create a new message.
 */
export const SearchDiaryEntriesRequestSchema: GenMessage<SearchDiaryEntriesRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 10);

/**
 * @generated from message diary.SearchDiaryEntriesResponse
 */
export type SearchDiaryEntriesResponse =
	Message<"diary.SearchDiaryEntriesResponse"> & {
		/**
		 * 実際に検索した単語
		 *
		 * @generated from field: string searched_keyword = 1;
		 */
		searchedKeyword: string;

		/**
		 * @generated from field: repeated diary.DiaryEntry entries = 2;
		 */
		entries: DiaryEntry[];
	};

/**
 * Describes the message diary.SearchDiaryEntriesResponse.
 * Use `create(SearchDiaryEntriesResponseSchema)` to create a new message.
 */
export const SearchDiaryEntriesResponseSchema: GenMessage<SearchDiaryEntriesResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 11);

/**
 * @generated from message diary.GetDiaryEntriesResponse
 */
export type GetDiaryEntriesResponse =
	Message<"diary.GetDiaryEntriesResponse"> & {
		/**
		 * @generated from field: repeated diary.DiaryEntry entries = 1;
		 */
		entries: DiaryEntry[];
	};

/**
 * Describes the message diary.GetDiaryEntriesResponse.
 * Use `create(GetDiaryEntriesResponseSchema)` to create a new message.
 */
export const GetDiaryEntriesResponseSchema: GenMessage<GetDiaryEntriesResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 12);

/**
 * @generated from message diary.GetDiaryEntriesByMonthResponse
 */
export type GetDiaryEntriesByMonthResponse =
	Message<"diary.GetDiaryEntriesByMonthResponse"> & {
		/**
		 * @generated from field: repeated diary.DiaryEntry entries = 1;
		 */
		entries: DiaryEntry[];
	};

/**
 * Describes the message diary.GetDiaryEntriesByMonthResponse.
 * Use `create(GetDiaryEntriesByMonthResponseSchema)` to create a new message.
 */
export const GetDiaryEntriesByMonthResponseSchema: GenMessage<GetDiaryEntriesByMonthResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 13);

/**
 * 日記エントリを取得した結果を返すレスポンス
 *
 * @generated from message diary.GetDiaryEntryResponse
 */
export type GetDiaryEntryResponse = Message<"diary.GetDiaryEntryResponse"> & {
	/**
	 * @generated from field: diary.DiaryEntry entry = 1;
	 */
	entry?: DiaryEntry;
};

/**
 * Describes the message diary.GetDiaryEntryResponse.
 * Use `create(GetDiaryEntryResponseSchema)` to create a new message.
 */
export const GetDiaryEntryResponseSchema: GenMessage<GetDiaryEntryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 14);

/**
 * 日記エントリを更新するためのリクエスト
 *
 * @generated from message diary.UpdateDiaryEntryRequest
 */
export type UpdateDiaryEntryRequest =
	Message<"diary.UpdateDiaryEntryRequest"> & {
		/**
		 * @generated from field: string id = 1;
		 */
		id: string;

		/**
		 * @generated from field: string title = 2;
		 */
		title: string;

		/**
		 * @generated from field: string content = 3;
		 */
		content: string;

		/**
		 * @generated from field: diary.YMD date = 4;
		 */
		date?: YMD;

		/**
		 * エンティティと位置情報のリスト
		 *
		 * @generated from field: repeated diary.DiaryEntityInput diary_entities = 5;
		 */
		diaryEntities: DiaryEntityInput[];
	};

/**
 * Describes the message diary.UpdateDiaryEntryRequest.
 * Use `create(UpdateDiaryEntryRequestSchema)` to create a new message.
 */
export const UpdateDiaryEntryRequestSchema: GenMessage<UpdateDiaryEntryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 15);

/**
 * 更新された日記エントリを返すレスポンス
 *
 * @generated from message diary.UpdateDiaryEntryResponse
 */
export type UpdateDiaryEntryResponse =
	Message<"diary.UpdateDiaryEntryResponse"> & {
		/**
		 * @generated from field: diary.DiaryEntry entry = 1;
		 */
		entry?: DiaryEntry;
	};

/**
 * Describes the message diary.UpdateDiaryEntryResponse.
 * Use `create(UpdateDiaryEntryResponseSchema)` to create a new message.
 */
export const UpdateDiaryEntryResponseSchema: GenMessage<UpdateDiaryEntryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 16);

/**
 * 日記エントリを削除するためのリクエスト
 *
 * @generated from message diary.DeleteDiaryEntryRequest
 */
export type DeleteDiaryEntryRequest =
	Message<"diary.DeleteDiaryEntryRequest"> & {
		/**
		 * @generated from field: string id = 1;
		 */
		id: string;
	};

/**
 * Describes the message diary.DeleteDiaryEntryRequest.
 * Use `create(DeleteDiaryEntryRequestSchema)` to create a new message.
 */
export const DeleteDiaryEntryRequestSchema: GenMessage<DeleteDiaryEntryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 17);

/**
 * 削除操作の結果を返すレスポンス
 *
 * @generated from message diary.DeleteDiaryEntryResponse
 */
export type DeleteDiaryEntryResponse =
	Message<"diary.DeleteDiaryEntryResponse"> & {
		/**
		 * @generated from field: bool success = 1;
		 */
		success: boolean;
	};

/**
 * Describes the message diary.DeleteDiaryEntryResponse.
 * Use `create(DeleteDiaryEntryResponseSchema)` to create a new message.
 */
export const DeleteDiaryEntryResponseSchema: GenMessage<DeleteDiaryEntryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 18);

/**
 * 月サマリー
 *
 * @generated from message diary.MonthlySummary
 */
export type MonthlySummary = Message<"diary.MonthlySummary"> & {
	/**
	 * @generated from field: string id = 1;
	 */
	id: string;

	/**
	 * @generated from field: diary.YM month = 2;
	 */
	month?: YM;

	/**
	 * @generated from field: string summary = 3;
	 */
	summary: string;

	/**
	 * @generated from field: int64 created_at = 4;
	 */
	createdAt: bigint;

	/**
	 * @generated from field: int64 updated_at = 5;
	 */
	updatedAt: bigint;
};

/**
 * Describes the message diary.MonthlySummary.
 * Use `create(MonthlySummarySchema)` to create a new message.
 */
export const MonthlySummarySchema: GenMessage<MonthlySummary> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 19);

/**
 * 月ごとのサマリー生成リクエスト
 *
 * @generated from message diary.GenerateMonthlySummaryRequest
 */
export type GenerateMonthlySummaryRequest =
	Message<"diary.GenerateMonthlySummaryRequest"> & {
		/**
		 * @generated from field: diary.YM month = 1;
		 */
		month?: YM;
	};

/**
 * Describes the message diary.GenerateMonthlySummaryRequest.
 * Use `create(GenerateMonthlySummaryRequestSchema)` to create a new message.
 */
export const GenerateMonthlySummaryRequestSchema: GenMessage<GenerateMonthlySummaryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 20);

/**
 * 月ごとのサマリー生成レスポンス
 *
 * @generated from message diary.GenerateMonthlySummaryResponse
 */
export type GenerateMonthlySummaryResponse =
	Message<"diary.GenerateMonthlySummaryResponse"> & {
		/**
		 * @generated from field: diary.MonthlySummary summary = 1;
		 */
		summary?: MonthlySummary;
	};

/**
 * Describes the message diary.GenerateMonthlySummaryResponse.
 * Use `create(GenerateMonthlySummaryResponseSchema)` to create a new message.
 */
export const GenerateMonthlySummaryResponseSchema: GenMessage<GenerateMonthlySummaryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 21);

/**
 * 月ごとのサマリー取得リクエスト
 *
 * @generated from message diary.GetMonthlySummaryRequest
 */
export type GetMonthlySummaryRequest =
	Message<"diary.GetMonthlySummaryRequest"> & {
		/**
		 * @generated from field: diary.YM month = 1;
		 */
		month?: YM;
	};

/**
 * Describes the message diary.GetMonthlySummaryRequest.
 * Use `create(GetMonthlySummaryRequestSchema)` to create a new message.
 */
export const GetMonthlySummaryRequestSchema: GenMessage<GetMonthlySummaryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 22);

/**
 * 月ごとのサマリー取得レスポンス
 *
 * @generated from message diary.GetMonthlySummaryResponse
 */
export type GetMonthlySummaryResponse =
	Message<"diary.GetMonthlySummaryResponse"> & {
		/**
		 * @generated from field: diary.MonthlySummary summary = 1;
		 */
		summary?: MonthlySummary;
	};

/**
 * Describes the message diary.GetMonthlySummaryResponse.
 * Use `create(GetMonthlySummaryResponseSchema)` to create a new message.
 */
export const GetMonthlySummaryResponseSchema: GenMessage<GetMonthlySummaryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 23);

/**
 * 日サマリー
 *
 * @generated from message diary.DailySummary
 */
export type DailySummary = Message<"diary.DailySummary"> & {
	/**
	 * @generated from field: string id = 1;
	 */
	id: string;

	/**
	 * @generated from field: string diary_id = 2;
	 */
	diaryId: string;

	/**
	 * @generated from field: diary.YMD date = 3;
	 */
	date?: YMD;

	/**
	 * @generated from field: string summary = 4;
	 */
	summary: string;

	/**
	 * @generated from field: int64 created_at = 5;
	 */
	createdAt: bigint;

	/**
	 * @generated from field: int64 updated_at = 6;
	 */
	updatedAt: bigint;
};

/**
 * Describes the message diary.DailySummary.
 * Use `create(DailySummarySchema)` to create a new message.
 */
export const DailySummarySchema: GenMessage<DailySummary> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 24);

/**
 * 日ごとのサマリー生成リクエスト
 *
 * @generated from message diary.GenerateDailySummaryRequest
 */
export type GenerateDailySummaryRequest =
	Message<"diary.GenerateDailySummaryRequest"> & {
		/**
		 * @generated from field: string diary_id = 1;
		 */
		diaryId: string;
	};

/**
 * Describes the message diary.GenerateDailySummaryRequest.
 * Use `create(GenerateDailySummaryRequestSchema)` to create a new message.
 */
export const GenerateDailySummaryRequestSchema: GenMessage<GenerateDailySummaryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 25);

/**
 * 日ごとのサマリー生成レスポンス
 *
 * @generated from message diary.GenerateDailySummaryResponse
 */
export type GenerateDailySummaryResponse =
	Message<"diary.GenerateDailySummaryResponse"> & {
		/**
		 * @generated from field: diary.DailySummary summary = 1;
		 */
		summary?: DailySummary;
	};

/**
 * Describes the message diary.GenerateDailySummaryResponse.
 * Use `create(GenerateDailySummaryResponseSchema)` to create a new message.
 */
export const GenerateDailySummaryResponseSchema: GenMessage<GenerateDailySummaryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 26);

/**
 * 日ごとのサマリー取得リクエスト
 *
 * @generated from message diary.GetDailySummaryRequest
 */
export type GetDailySummaryRequest = Message<"diary.GetDailySummaryRequest"> & {
	/**
	 * @generated from field: diary.YMD date = 1;
	 */
	date?: YMD;
};

/**
 * Describes the message diary.GetDailySummaryRequest.
 * Use `create(GetDailySummaryRequestSchema)` to create a new message.
 */
export const GetDailySummaryRequestSchema: GenMessage<GetDailySummaryRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 27);

/**
 * 日ごとのサマリー取得レスポンス
 *
 * @generated from message diary.GetDailySummaryResponse
 */
export type GetDailySummaryResponse =
	Message<"diary.GetDailySummaryResponse"> & {
		/**
		 * @generated from field: diary.DailySummary summary = 1;
		 */
		summary?: DailySummary;
	};

/**
 * Describes the message diary.GetDailySummaryResponse.
 * Use `create(GetDailySummaryResponseSchema)` to create a new message.
 */
export const GetDailySummaryResponseSchema: GenMessage<GetDailySummaryResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 28);

/**
 * 直近トレンド分析取得リクエスト
 *
 * user_id は認証情報から取得
 *
 * @generated from message diary.GetLatestTrendRequest
 */
export type GetLatestTrendRequest = Message<"diary.GetLatestTrendRequest"> & {};

/**
 * Describes the message diary.GetLatestTrendRequest.
 * Use `create(GetLatestTrendRequestSchema)` to create a new message.
 */
export const GetLatestTrendRequestSchema: GenMessage<GetLatestTrendRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 29);

/**
 * 直近トレンド分析取得レスポンス
 *
 * @generated from message diary.GetLatestTrendResponse
 */
export type GetLatestTrendResponse = Message<"diary.GetLatestTrendResponse"> & {
	/**
	 * トレンド分析結果テキスト（最大300字程度）
	 *
	 * @generated from field: string analysis = 1;
	 */
	analysis: string;

	/**
	 * 分析期間開始（ISO 8601形式）
	 *
	 * @generated from field: string period_start = 2;
	 */
	periodStart: string;

	/**
	 * 分析期間終了（ISO 8601形式）
	 *
	 * @generated from field: string period_end = 3;
	 */
	periodEnd: string;

	/**
	 * 生成日時（ISO 8601形式）
	 *
	 * @generated from field: string generated_at = 4;
	 */
	generatedAt: string;
};

/**
 * Describes the message diary.GetLatestTrendResponse.
 * Use `create(GetLatestTrendResponseSchema)` to create a new message.
 */
export const GetLatestTrendResponseSchema: GenMessage<GetLatestTrendResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 30);

/**
 * 直近トレンド分析生成トリガーリクエスト（デバッグ用）
 *
 * user_id は認証情報から取得
 *
 * @generated from message diary.TriggerLatestTrendRequest
 */
export type TriggerLatestTrendRequest =
	Message<"diary.TriggerLatestTrendRequest"> & {};

/**
 * Describes the message diary.TriggerLatestTrendRequest.
 * Use `create(TriggerLatestTrendRequestSchema)` to create a new message.
 */
export const TriggerLatestTrendRequestSchema: GenMessage<TriggerLatestTrendRequest> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 31);

/**
 * 直近トレンド分析生成トリガーレスポンス（デバッグ用）
 *
 * @generated from message diary.TriggerLatestTrendResponse
 */
export type TriggerLatestTrendResponse =
	Message<"diary.TriggerLatestTrendResponse"> & {
		/**
		 * 成功フラグ
		 *
		 * @generated from field: bool success = 1;
		 */
		success: boolean;

		/**
		 * メッセージ
		 *
		 * @generated from field: string message = 2;
		 */
		message: string;
	};

/**
 * Describes the message diary.TriggerLatestTrendResponse.
 * Use `create(TriggerLatestTrendResponseSchema)` to create a new message.
 */
export const TriggerLatestTrendResponseSchema: GenMessage<TriggerLatestTrendResponse> =
	/*@__PURE__*/
	messageDesc(file_diary_diary, 32);

/**
 * DiaryService は日記エントリの作成・読み取り・更新・削除（CRUD）と
 * AI要約生成機能を提供するサービスです。
 * エンティティとの紐付けにより、固有名詞のハイライト表示や検索が可能です。
 *
 * @generated from service diary.DiaryService
 */
export const DiaryService: GenService<{
	/**
	 * CreateDiaryEntry は新しい日記エントリを作成します。
	 * 1日1エントリの制約があり、同じ日付に複数のエントリは作成できません。
	 * エンティティとの紐付け（diary_entities）もトランザクション内で同時に作成されます。
	 *
	 * 例:
	 *   request: { content: "今日は友人と会った", date: { year: 2025, month: 10, day: 9 }, diary_entities: [...] }
	 *   response: { entry: { id: "uuid", content: "...", ... } }
	 *
	 * エラー:
	 *   - AlreadyExists: 指定された日付の日記が既に存在する
	 *   - InvalidArgument: 日付が不正
	 *
	 * @generated from rpc diary.DiaryService.CreateDiaryEntry
	 */
	createDiaryEntry: {
		methodKind: "unary";
		input: typeof CreateDiaryEntryRequestSchema;
		output: typeof CreateDiaryEntryResponseSchema;
	};
	/**
	 * UpdateDiaryEntry は既存の日記エントリを更新します。
	 * エンティティとの紐付けも同時に更新されます（既存の紐付けは全て削除され、新しい紐付けが作成されます）。
	 *
	 * 例:
	 *   request: { id: "uuid", content: "更新された内容", date: { year: 2025, month: 10, day: 9 }, diary_entities: [...] }
	 *   response: { entry: { id: "uuid", content: "更新された内容", ... } }
	 *
	 * エラー:
	 *   - NotFound: 日記エントリが見つからない
	 *   - PermissionDenied: 他のユーザーの日記にアクセスしようとした
	 *
	 * @generated from rpc diary.DiaryService.UpdateDiaryEntry
	 */
	updateDiaryEntry: {
		methodKind: "unary";
		input: typeof UpdateDiaryEntryRequestSchema;
		output: typeof UpdateDiaryEntryResponseSchema;
	};
	/**
	 * DeleteDiaryEntry は日記エントリを削除します。
	 * 関連するエンティティとの紐付け（diary_entities）もカスケード削除されます。
	 *
	 * エラー:
	 *   - NotFound: 日記エントリが見つからない
	 *   - PermissionDenied: 他のユーザーの日記にアクセスしようとした
	 *
	 * @generated from rpc diary.DiaryService.DeleteDiaryEntry
	 */
	deleteDiaryEntry: {
		methodKind: "unary";
		input: typeof DeleteDiaryEntryRequestSchema;
		output: typeof DeleteDiaryEntryResponseSchema;
	};
	/**
	 * GetDiaryEntry は指定された日付の日記エントリを取得します。
	 * エンティティとの紐付け情報も含まれます。
	 *
	 * 例:
	 *   request: { date: { year: 2025, month: 10, day: 9 } }
	 *   response: { entry: { id: "uuid", content: "...", diary_entities: [...] } }
	 *
	 * エラー:
	 *   - NotFound: 指定された日付の日記が存在しない
	 *
	 * @generated from rpc diary.DiaryService.GetDiaryEntry
	 */
	getDiaryEntry: {
		methodKind: "unary";
		input: typeof GetDiaryEntryRequestSchema;
		output: typeof GetDiaryEntryResponseSchema;
	};
	/**
	 * GetDiaryEntries は指定された複数の日付の日記エントリを取得します。
	 * ホームでの直近3日表示や、過去数年分の取得など、柔軟な取得が可能です。
	 *
	 * 例:
	 *   request: { dates: [{ year: 2025, month: 10, day: 9 }, { year: 2025, month: 10, day: 8 }] }
	 *   response: { entries: [{ id: "uuid1", ... }, { id: "uuid2", ... }] }
	 *
	 * エラー: なし（存在する日記のみ返される）
	 *
	 * @generated from rpc diary.DiaryService.GetDiaryEntries
	 */
	getDiaryEntries: {
		methodKind: "unary";
		input: typeof GetDiaryEntriesRequestSchema;
		output: typeof GetDiaryEntriesResponseSchema;
	};
	/**
	 * GetDiaryEntriesByMonth は指定された月の全日記エントリを取得します。
	 *
	 * 例:
	 *   request: { month: { year: 2025, month: 10 } }
	 *   response: { entries: [{ id: "uuid1", date: { year: 2025, month: 10, day: 1 }, ... }, ...] }
	 *
	 * エラー: なし（存在する日記のみ返される）
	 *
	 * @generated from rpc diary.DiaryService.GetDiaryEntriesByMonth
	 */
	getDiaryEntriesByMonth: {
		methodKind: "unary";
		input: typeof GetDiaryEntriesByMonthRequestSchema;
		output: typeof GetDiaryEntriesByMonthResponseSchema;
	};
	/**
	 * SearchDiaryEntries はキーワードで日記を全文検索します。
	 * PostgreSQLのLIKE検索を使用しています。
	 *
	 * 例:
	 *   request: { keyword: "友人" }
	 *   response: { searched_keyword: "友人", entries: [{ id: "uuid", content: "今日は友人と...", ... }] }
	 *
	 * エラー: なし（見つからない場合は空配列）
	 *
	 * @generated from rpc diary.DiaryService.SearchDiaryEntries
	 */
	searchDiaryEntries: {
		methodKind: "unary";
		input: typeof SearchDiaryEntriesRequestSchema;
		output: typeof SearchDiaryEntriesResponseSchema;
	};
	/**
	 * GenerateMonthlySummary は指定された月の日記をLLMで要約します。
	 * ユーザーのLLMキー設定が必要です。既存のサマリーがある場合は上書きされます。
	 *
	 * 例:
	 *   request: { month: { year: 2025, month: 10 } }
	 *   response: { summary: { id: "uuid", month: { year: 2025, month: 10 }, summary: "10月は...", ... } }
	 *
	 * エラー:
	 *   - NotFound: LLMキーが設定されていない、または対象月に日記が存在しない
	 *   - Internal: LLM API呼び出しエラー
	 *
	 * @generated from rpc diary.DiaryService.GenerateMonthlySummary
	 */
	generateMonthlySummary: {
		methodKind: "unary";
		input: typeof GenerateMonthlySummaryRequestSchema;
		output: typeof GenerateMonthlySummaryResponseSchema;
	};
	/**
	 * GetMonthlySummary は指定された月のサマリーを取得します。
	 *
	 * 例:
	 *   request: { month: { year: 2025, month: 10 } }
	 *   response: { summary: { id: "uuid", month: { year: 2025, month: 10 }, summary: "10月は...", ... } }
	 *
	 * エラー:
	 *   - NotFound: サマリーが存在しない
	 *
	 * @generated from rpc diary.DiaryService.GetMonthlySummary
	 */
	getMonthlySummary: {
		methodKind: "unary";
		input: typeof GetMonthlySummaryRequestSchema;
		output: typeof GetMonthlySummaryResponseSchema;
	};
	/**
	 * GenerateDailySummary は指定された日記をLLMで要約します。
	 * ユーザーのLLMキー設定が必要です。既存のサマリーがある場合は上書きされます。
	 *
	 * 例:
	 *   request: { diary_id: "uuid" }
	 *   response: { summary: { id: "uuid", diary_id: "uuid", summary: "今日は...", ... } }
	 *
	 * エラー:
	 *   - NotFound: LLMキーが設定されていない、または日記が存在しない
	 *   - PermissionDenied: 他のユーザーの日記にアクセスしようとした
	 *   - Internal: LLM API呼び出しエラー
	 *
	 * @generated from rpc diary.DiaryService.GenerateDailySummary
	 */
	generateDailySummary: {
		methodKind: "unary";
		input: typeof GenerateDailySummaryRequestSchema;
		output: typeof GenerateDailySummaryResponseSchema;
	};
	/**
	 * GetDailySummary は指定された日付のサマリーを取得します。
	 *
	 * 例:
	 *   request: { date: { year: 2025, month: 10, day: 9 } }
	 *   response: { summary: { id: "uuid", date: { year: 2025, month: 10, day: 9 }, summary: "今日は...", ... } }
	 *
	 * エラー:
	 *   - NotFound: サマリーが存在しない
	 *
	 * @generated from rpc diary.DiaryService.GetDailySummary
	 */
	getDailySummary: {
		methodKind: "unary";
		input: typeof GetDailySummaryRequestSchema;
		output: typeof GetDailySummaryResponseSchema;
	};
	/**
	 * GetLatestTrend は直近1週間の日記のトレンド分析を取得します。
	 * Redisに保存された分析結果を返します。
	 *
	 * 例:
	 *   request: {}
	 *   response: { analysis: "最近は...", period_start: "2025-10-10T00:00:00Z", period_end: "2025-10-16T23:59:59Z", generated_at: "2025-10-17T04:00:00Z" }
	 *
	 * エラー:
	 *   - NotFound: トレンド分析が存在しない
	 *
	 * @generated from rpc diary.DiaryService.GetLatestTrend
	 */
	getLatestTrend: {
		methodKind: "unary";
		input: typeof GetLatestTrendRequestSchema;
		output: typeof GetLatestTrendResponseSchema;
	};
	/**
	 * TriggerLatestTrend はトレンド分析の生成を手動でトリガーします（デバッグ用）。
	 * 非production環境でのみ使用可能です。
	 *
	 * 例:
	 *   request: {}
	 *   response: { success: true, message: "トレンド分析の生成をキューに追加しました" }
	 *
	 * エラー:
	 *   - PermissionDenied: production環境では使用不可
	 *   - NotFound: LLMキーが設定されていない
	 *
	 * @generated from rpc diary.DiaryService.TriggerLatestTrend
	 */
	triggerLatestTrend: {
		methodKind: "unary";
		input: typeof TriggerLatestTrendRequestSchema;
		output: typeof TriggerLatestTrendResponseSchema;
	};
}> = /*@__PURE__*/ serviceDesc(file_diary_diary, 0);
